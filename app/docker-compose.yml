services:
  ib-gateway:
    restart: always
    container_name: tbot-on-tradingboat
    build:
      context: ./stable
      args:
        TBOT_TRADINGBOAT_GIT_REPO: ${TBOT_TRADINGBOAT_GIT_REPO:-https://github.com/mporenta/tbot-tradingboat2.git}
        TBOT_TRADINGBOAT_GIT_BRANCH: ${TBOT_TRADINGBOAT_GIT_BRANCH:-rth}
        TBOT_TVWB_GIT_REPO: ${TBOT_TVWB_GIT_REPO:-https://github.com/mporenta/tradingview-webhooks-bot2.git}
        TBOT_TVWB_GIT_BRANCH: ${TBOT_TVWB_GIT_BRANCH:-envKey}
  
    environment:
      TWS_USERID: ${TWS_USERID}
      IB_GATEWAY_VERSION: ${IB_GATEWAY_VERSION}
      TWS_PASSWORD: ${TWS_PASSWORD}
      TRADING_MODE: ${TRADING_MODE:-live}
      READ_ONLY_API: ${READ_ONLY_API:-}
      VNC_SERVER_PASSWORD: ${VNC_SERVER_PASSWORD:-}
      PNL_THRESHOLD: ${TBOT_PNL_THRESHOLD:--0.05}
      TVWB_UNIQUE_KEY: ${TVWB_UNIQUE_KEY:-}
      TVWB_HTTPS_PORT: ${TVWB_HTTPS_PORT:-5000}
      TBOT_LOGLEVEL: ${TBOT_LOGLEVEL:-INFO}
      TBOT_IB_LOGLEVEL: ${TBOT_IB_LOGLEVEL:-INFO}
      TBOT_PRODUCTION: ${TBOT_PRODUCTION:-False}
      TBOT_REDIS_HOST: ${TBOT_REDIS_HOST:-redis}
      TBOT_REDIS_PORT: ${TBOT_REDIS_PORT:-6379}
      TBOT_REDIS_PASSWORD: ${TBOT_REDIS_PASSWORD:-}
      TBOT_USES_REDIS_STREAM: ${TBOT_USES_REDIS_STREAM:-False}
      TBOT_REDIS_READ_TIMEOUT_MS: ${TBOT_REDIS_READ_TIMEOUT_MS:-10}
      TBOT_IBKR_PORT: ${TBOT_IBKR_PORT:-4001}
      TBOT_IBKR_CLIENTID: ${TBOT_IBKR_CLIENTID:-1}
      TBOT_IBKR_IPADDR: ${TBOT_IBKR_IPADDR:-127.0.0.1}
      TBOT_DB_HOME: ${TBOT_DB_HOME:-}
      TBOT_DB_OFFICE: ${TBOT_DB_OFFICE:-}
      TBOT_DISCORD_WEBHOOK: ${TBOT_DISCORD_WEBHOOK:-}
      TBOT_TELEGRAM_TOKEN: ${TBOT_TELEGRAM_TOKEN:-}
      TBOT_TELEGRAM_CHAT_ID: ${TBOT_TELEGRAM_CHAT_ID:-}
      TBOT_NGROK: ${TBOT_NGROK:-}
      TBOT_PROFILER: ${TBOT_PROFILER:-False}
      USER_EMAIL_GIT: ${USER_EMAIL_GIT}
      USER_NAME_GIT: ${USER_NAME_GIT}
      FLASK_LOG_FILE: ${FLASK_LOG_FILE}
      IB_PAPER_ACCOUNT: ${IB_PAPER_ACCOUNT:-U12156441}


    
    
    ports:
      - "127.0.0.1:4001:4001"
      - "127.0.0.1:4002:4002"
      - "0.0.0.0:5900:5900"
      - "0.0.0.0:5000:5000"
    networks:
      - tbot-network
    depends_on:
      - redis
      - ngrok
  
  redis:
    image: redis:7.0.10-alpine
    restart: always
    container_name: redis-on-tradingboat
    ports:
      - "0.0.0.0:6379:6379"
    networks:
      - tbot-network

  ngrok:
    image: ngrok/ngrok:3.5.0-alpine
    restart: always
    container_name: ngrok-on-tradingboat
    command: tunnel --label edge=${NGROK_EDGE_TBOT} ib-gateway:5000
    ports:
      - '4040:4040'
    networks:
      - tbot-network
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTH}
      NGROK_REGION: us

  pnl-monitor-frontend:
    container_name: pnl-monitor-frontend
    build:
      context: ./stable
      dockerfile: Dockerfile.pnl_frontend
    depends_on:
      - ngrok-pnl
      - redis_fastapi
    ports:
      - 5001:5001
    networks:
      - tbot-network
    environment:
      PYTHONUNBUFFERED: 1
      TIINGO_API_TOKEN: ${TIINGO_API_TOKEN:-}
      TBOT_IBKR_PORT: ${TBOT_IBKR_PORT:-4001}
      WEBHOOK_PNL_THRESHOLD: ${WEBHOOK_PNL_THRESHOLD:-}
      FAST_REDIS_HOST: ${FAST_REDIS_HOST:-redis_fastapi}
      FAST_REDIS_PORT: ${FAST_REDIS_PORT:-6380} 
      FAST_REDIS_DB: ${FAST_REDIS_DB:-0}
      FAST_REDIS_PASSWORD: ${FAST_REDIS_PASSWORD:-}
      

  
      DATABASE_PATH: ${DATABASE_PATH:-/app/data/pnl_data_jengo.db}
      TVWB_UNIQUE_KEY: ${TVWB_UNIQUE_KEY:-}
    volumes:
      - ./data:/app/data
      - ./models:/app/models
    

  pnl-monitor-backend:
    container_name: pnl-monitor-backend
    build:
      context: ./stable
      dockerfile: Dockerfile.pnl_backend
    depends_on:
      - ngrok-pnl
   
    ports:
      - 5002:5002
    networks:
      - tbot-network
    environment:
      PYTHONUNBUFFERED: 1
      RISK_PERCENT: ${RISK_PERCENT:-}
      RISK_AMOUNT: ${RISK_AMOUNT:-}
      TBOT_IBKR_PORT: ${TBOT_IBKR_PORT:-4001}
      IB_GATEWAY_HOST: ${IB_GATEWAY_HOST:-ib-gateway}
      IB_GATEWAY_CLIENT_ID: ${IB_GATEWAY_CLIENT_ID:-8}
      TVWB_UNIQUE_KEY: ${TVWB_UNIQUE_KEY:-}
      TOKEN_KEY: ${TOKEN_KEY:-}
      DATABASE_PATH: ${DATABASE_PATH:-/app/data/pnl_data_jengo.db}
      TBOT_LOGLEVEL: ${TBOT_LOGLEVEL:-}
      TBOT_IB_LOGLEVEL: ${TBOT_IB_LOGLEVEL:-}
      TIINGO_API_TOKEN: ${TIINGO_API_TOKEN:-}
      IB_REALTIME_CLIENT_ID: ${IB_REALTIME_CLIENT_ID:-77}
      WEBHOOK_PNL_THRESHOLD: ${WEBHOOK_PNL_THRESHOLD:-}

    volumes:
      - ./data:/app/data
      - ./models:/app/models

  ngrok-pnl:
    image: ngrok/ngrok:3.5.0-alpine
    restart: always
    container_name: ngrok-pnl-monitor
    command: tunnel --label edge=${NGROK_EDGE_PNL} pnl-monitor-frontend:5001
    ports:
    - 80:80
    networks:
      - tbot-network
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTH}
      NGROK_REGION: us
      
  python-venv:
    build:
      context: ./stable
      dockerfile: Dockerfile.python
    image: python-venv:latest
    container_name: python-venv
    stdin_open: true  # Keep the container open for interactive use
    tty: true         # Enable TTY for shell access
    working_dir: /app/python
    ports:
      - 5005:5005
    networks:
      - tbot-network
   
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    command: /bin/bash


  redis_fastapi:
      image: redis:7.0.10-alpine
      container_name: redis_fastapi_ib
      command: redis-server --port 6380  # Add this line to make Redis listen on 6380
      ports:
        - "6380:6380"
      volumes:
      - ./redis_fastapi_data:/app/data  
      networks:
        - tbot-network
      restart: always
      healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 10s
        timeout: 5s
        retries: 3

 


networks:
  tbot-network:
    driver: bridge